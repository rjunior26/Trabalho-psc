package com.mycompany.principal;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * Classe principal do sistema clínico. Esta classe implementa um menu de
 * gerenciamento de pessoas.
 */
public class Principal {

    private static List<Pessoa> pessoas = new ArrayList<>();

    /**
     * Método principal que inicializa o scanner e exibe o menu de opções.
     */
    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            int opcao = 0;
            /**
             * Método principal que exibe o menu e processa as escolhas do
             * usuário.
             */
            while (opcao != 5) {
                System.out.println("Menu:");
                System.out.println("1. Inserir");
                System.out.println("2. Alterar");
                System.out.println("3. Remover");
                System.out.println("4. Listar");
                System.out.println("5. Sair");
                System.out.print("Escolha uma opção: ");
                opcao = scanner.nextInt();
                scanner.nextLine(
                        switch (opcao) {
                    case 1 ->
                        inserir(scanner);
                    case 2 ->
                        alterar(scanner);
                    case 3 ->
                        remover(scanner);
                    case 4 ->
                        listar();
                    case 5 ->
                        System.out.println("Saindo...");
                    default ->
                        System.out.println("Opção inválida.");
                }
            }
        }
    }

    /**
     * Método para inserir uma nova pessoa (Paciente ou Médico) na lista.
     *
     */
    private static void inserir(Scanner scanner) {
        System.out.println("1. Inserir Paciente");
        System.out.println("2. Inserir Medico");
        int tipo = scanner.nextInt();
        scanner.nextLine();

        System.out.print("Nome: ");
        String nome = scanner.nextLine();
        System.out.print("CPF: ");
        String cpf = scanner.nextLine();

        switch (tipo) {
            case 1 -> {
                System.out.print("Idade: ");
                int idade = scanner.nextInt();
                scanner.nextLine();
                Paciente paciente = new Paciente(nome, cpf, idade);
                pessoas.add(paciente);
            }
            case 2 -> {
                System.out.print("Especialidade: ");
                String especialidade = scanner.nextLine();
                Medico medico = new Medico(nome, cpf, especialidade);
                pessoas.add(medico);
            }
            default ->
                System.out.println("Opção inválida.");
        }
    }

    /**
     * Método para alterar os dados de uma pessoa existente na lista.
     */
    private static void alterar(Scanner scanner) {
        System.out.print("Digite o CPF da pessoa a ser alterada: ");
        String cpf = scanner.nextLine();
        for (Pessoa pessoa : pessoas) {
            if (pessoa.getCpf().equals(cpf)) {
                System.out.print("Novo nome: ");
                String nome = scanner.nextLine();
                pessoa.setNome(nome);

                switch (pessoa) {
                    case Paciente paciente -> {
                        System.out.print("Nova idade: ");
                        int idade = scanner.nextInt();
                        scanner.nextLine();
                        paciente.setIdade(idade);
                    }
                    case Medico medico -> {
                        System.out.print("Nova especialidade: ");
                        String especialidade = scanner.nextLine();
                        medico.setEspecialidade(especialidade);
                    }
                    default -> {
                    }
                }
                return;
            }
        }
        System.out.println("Pessoa não encontrada.");
    }

    /**
     * Método para remover uma pessoa da lista.
     *
     */
    private static void remover(Scanner scanner) {
        System.out.print("Digite o CPF da pessoa a ser removida: ");
        String cpf = scanner.nextLine();
        for (Pessoa pessoa : pessoas) {
            if (pessoa.getCpf().equals(cpf)) {
                pessoas.remove(pessoa);
                System.out.println("Pessoa removida com sucesso.");
                return;
            }
        }
        System.out.println("Pessoa não encontrada.");
    }

    /**
     * Método para listar todas as pessoas presentes na lista.
     */
    private static void listar() {
        for (Pessoa pessoa : pessoas) {
            System.out.println(pessoa);
        }
    }
}
